<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//randomize()
player=0
selected=0
over=0
x=floor(room_width/30)*15
y=floor(room_height/30)*15
xx=x
yy=y
lx=x
ly=y
unitList=ds_list_create()
delay=0
analyze=99
/*
u=instance_create(room_width/2,room_height/2,NUnit);
u.unit=darkKnight_m0
ds_list_add(unitList,u)
u=instance_create(room_width/2,room_height/2,NUnit);
u.unit=Sniper001
ds_list_add(unitList,u)
u=instance_create(room_width/2,room_height/2,NUnit);
u.unit=UR001_m0
ds_list_add(unitList,u)
/*repeat(10){
u=instance_create(room_width/2,room_height/2,NUnit);
u.unit=choose(Sniper001,darkKnight_m0,A001,UR001_m0,SM001)
ds_list_add(unitList,u)
}*/

alarm[0]=3
listIndex=0
for (var i=0;i&lt;6;i++)
    key[i]=0
pressTime1=0
pressTime2=0
hold1=0
auto1=0
press=0
//fogGrid = ds_grid_create((room_width)/15,(room_height)/15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>u=instance_create(room_width/2,room_height/2,NUnit);
var p=player
with u{
unit=return_unit(unitSelect[p],1,0)
 get_unit_stats()
 alarm[11]=0
skill=returnSkill(unitSkill[p],1,0)
}
ds_list_add(unitList,u)
/*u=instance_create(room_width/2,room_height/2,NUnit);
u.unit=Sniper001
ds_list_add(unitList,u)
u=instance_create(room_width/2,room_height/2,NUnit);
u.unit=UR001_m0
ds_list_add(unitList,u)
/**/
for (var i=0;i&lt;ds_list_size(unitList);i++){
var cur=ds_list_find_value(unitList,i);
cur.guild=player;
cur.personType=0
/*
0-nothing
2-defend
1-attack
*/
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx=clamp(xx,0,room_width-15)
yy=clamp(yy,0,room_height-15)
var pass=0;
var mx=xx/15,my=yy/15;
switch player{
       case 0: with NMenu
            pass=ds_grid_get(gridF1,mx,my)
            break;
       case 1: with NMenu
            pass=ds_grid_get(gridF2,mx,my)
            break;
}
if pass&lt;0
{
xx=lx
yy=ly
}
lx=xx
ly=yy
///camera Movement
if abs(xx-x)&gt;1
   x+=(xx-x)/2
else
    x=xx
if abs(yy-y)&gt;1
   y+=(yy-y)/2
else
    y=yy
if delay&gt;0
   delay--
/*var c=id
with NMenu
show_debug_message(ds_grid_get(grid2,floor(c.x/15),floor(c.y/15)))
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///double press timer
if pressTime1&gt;0
   pressTime1--
if listIndex&gt;=ds_list_size(unitList)
   listIndex=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var px=x/15//floor(x/15);
var py=y/15//floor(y/15);
var p=player;
var vx=view_xview[p]/15,vy=view_yview[p]/15;
var fx=floor(view_xview[p]/15),fy=floor(view_yview[p]/15);
var vh=view_hview[p]/15,vw=view_wview[p]/15
if debugging=0
with NMenu{
for (xx=vx;xx&lt;vw+vx+1;xx++)
for (yy=vy;yy&lt;vh+vy+1;yy++){
    switch p{
           case 0:
                if ds_grid_get(gridF1,xx,yy)&lt;1
                {
                   draw_sprite_ext(hitbox15,0,((xx-vx)-vx+fx)*15,((yy-vy)-vy+fy)*15,1,1,0,0,0.5-ds_grid_get(gridF1,xx,yy))
                }
                if ds_grid_get(gridF1,xx,yy)&gt;0
                   ds_grid_multiply(gridF1,xx,yy,0.90)
                break;
           case 1:
                if ds_grid_get(gridF2,xx,yy)&lt;1
                {
                   draw_sprite_ext(hitbox15,0,((xx-vx)-vx+fx)*15+180,((yy-vy)-vy+fy)*15,1,1,0,0,0.5-ds_grid_get(gridF2,xx,yy))
                }
                if ds_grid_get(gridF2,xx,yy)&gt;0
                   ds_grid_multiply(gridF2,xx,yy,0.90)
                break;
    }
}

//ds_grid_multiply_region(gridF1,0,0,100,100,min(-1,0.95))
}
/*if pause&gt;0{
var cur=select_and_update_unit_list()
    if cur!=noone{
       draw_set_colour(c_orange)
       draw_line_width(cur.x+7.5,cur.y+7.5,cur.xx+7.5,cur.yy+7.5,3)
    }
}*/
//draw_sprite(sprite_index,-1,x-view_xview[player],y-view_yview[player])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var px=floor(x/15),py=floor(y/15),var p=player;
if debugging=0
with NMenu{
for (xx=max(0,px-view_wview[p]/15);xx&lt;min(100,px+view_wview[p]/15);xx++)
for (yy=max(0,py-view_hview[p]/15);yy&lt;min(100,py+view_hview[p]/15);yy++){
    switch p{
           case 0:
                if ds_grid_get(gridF1,xx,yy)&lt;1
                {
                   draw_sprite_ext(hitbox15,0,xx*15,yy*15,1,1,0,0,0.5-ds_grid_get(gridF1,xx,yy))
                }
                if ds_grid_get(gridF1,xx,yy)&gt;0
                   ds_grid_multiply(gridF1,xx,yy,0.90)
                break;
           case 1:
                if ds_grid_get(gridF2,xx,yy)&lt;1
                {
                   draw_sprite_ext(hitbox15,0,xx*15,yy*15,1,1,0,0,0.5-ds_grid_get(gridF2,xx,yy))
                }
                if ds_grid_get(gridF2,xx,yy)&gt;0
                   ds_grid_multiply(gridF2,xx,yy,0.90)
                break;
    }
}

//ds_grid_multiply_region(gridF1,0,0,100,100,min(-1,0.95))
}
/*if pause&gt;0{
var cur=select_and_update_unit_list()
    if cur!=noone{
       draw_set_colour(c_orange)
       draw_line_width(cur.x+7.5,cur.y+7.5,cur.xx+7.5,cur.yy+7.5,3)
    }
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw stats
//draw_sprite(sprite_index,-1,x-view_hview[player],y-view_yview[player])
var pl=player
var au=auto1
var cur=select_and_update_unit_list()
if cur!=noone{
   draw_set_colour(c_dkgray)
   draw_rectangle(3,210,74,230,false)
   draw_rectangle(77,204,134,230,false)
   draw_rectangle(137,204,177,230,false)
      draw_set_colour(c_ltgray)
   draw_set_font(pixelFont)
   draw_sprite_ext(hpBar,0,5,224,(cur.xp/cur.mxp)*68,2.5,0,c_teal,1)
   var text="LV:"+string(cur.lv)+" "+cur.name
   draw_text(5,218,text)
   draw_sprite_ext(hpBar,0,7,212,66,3.5,0,c_ltgray,1)
   
   with cur{
   if atkWait&gt;0
     draw_sprite(attackingicon,0,66,222)
    else if wait=1{
       if targ!=noone&amp;&amp;targ.guild!=guild
       draw_sprite(targetIcon,0,66,222)
       else if xx=rx&amp;&amp;yy=ry
       draw_sprite(retreaticon,0,66,222)
       else
       draw_sprite(walking,0,66,222)
     }
   //auto
   if keyboard_check_pressed(ord('O'))
      auto=1
   else if keyboard_check_pressed(ord('P'))
        auto=0
       if dmg&gt;=stats[0,0]{
       draw_sprite_ext(hpBar,0,5,212,(dmg/stats[0,1])*68,3.5,0,c_red,1)
       draw_sprite_ext(hpBar,0,5,212,(stats[0,0]/stats[0,1])*68,3.5,0,c_lime,1)}
       else{
       draw_sprite_ext(hpBar,0,5,212,(stats[0,0]/stats[0,1])*68,3.5,0,c_green,1)
        draw_sprite_ext(hpBar,0,5,212,(dmg/stats[0,1])*68,3.5,0,c_lime,1)}
        draw_sprite_ext(hpBar,0,5,220,max((energy/100)*68,0),1,0,c_orange,1)
       draw_set_colour(c_black)
       // draw_text(8,215,"Energy:"+string(floor(energy/100)*100)+"%");
       if  dmg&gt;stats[0,0]||stats[0,0]/stats[0,1]&lt;0.4
          draw_set_colour(c_red)
       //draw_text(8,207,"HP:"+string(stats[0,0])+"/"+string(stats[0,1]));
       draw_text(6,207,"HP:"+string(floor(dmg))+"/"+string(stats[0,1]));
       //draw other stats
       draw_set_colour(c_orange)
        draw_text(4,196,"RATING:"+string(floor(get_unit_worth())))
        //draw auto
        /*switch personType{
               case 0:draw_text(47,196,"Auto:off")break;
               case 1:draw_text(47,196,"Auto:Atk")break;
               case 2:draw_text(47,196,"Auto:Def")break;
        }*/
        if levelPlus=1{
            draw_sprite_ext(hpBar,0,104,206,(stats[0,2]/200)*24,2,0,c_white,1)
            draw_sprite_ext(hpBar,0,104,212,(stats[0,3]/200)*24,2,0,c_white,1)
            draw_sprite_ext(hpBar,0,104,218,(stats[0,4]/200)*24,2,0,c_white,1)
            draw_sprite_ext(hpBar,0,104,224,(stats[0,6]/200)*24,2,0,c_white,1)
        }
        else{
             draw_sprite_ext(hpBar,0,104,206,(stats[0,2]/10)*24,2,0,c_white,1)
            draw_sprite_ext(hpBar,0,104,212,(stats[0,3]/10)*24,2,0,c_white,1)
            draw_sprite_ext(hpBar,0,104,218,(stats[0,4]/10)*24,2,0,c_white,1)
            draw_sprite_ext(hpBar,0,104,224,(stats[0,6]/10)*24,2,0,c_white,1)
        }
       draw_set_colour(c_ltgray)
       draw_text(78,200,"ATK:"+string(ceil(stats[0,2])));
       draw_text(78,206,"DEF:"+string(ceil(stats[0,3])));
       draw_text(78,212,"TEC:"+string(ceil(stats[0,4])));
       draw_text(78,218,"LUC:"+string(ceil(stats[0,6])));
       draw_text(138,206,return_skill());
       draw_text(138,218,returnWep());
       draw_set_colour(c_orange)
       draw_text(138,200,"SKILL");
       draw_text(138,212,"Weapon");
       if pl=0
       draw_sprite_ext(allyUnits,-1,x-view_xview[0],y-view_yview[0],1,1,0,-1,0.8)
       else if pl=1
       draw_sprite_ext(allyUnits,-1,x-view_xview[0]+180,y-view_yview[0],1,1,0,-1,0.8)
       personType=au
   }
}
//draw other units hp
if ds_list_size(unitList)&lt;18{
   for (var i=1;i&lt;ds_list_size(unitList);i++){
       var s=listIndex+i
       if s&gt;=ds_list_size(unitList)
          s-=ds_list_size(unitList)
       var c=ds_list_find_value(unitList,s)//select_and_update_unit_list(s);
       with (c){
          draw_sprite_ext(hpBar,0,5,200-i*10,60,3.5,0,c_ltgray,1)
          draw_sprite_ext(hpBar,0,5,200-i*10,(stats[0,0]/stats[0,1])*60,3.5,0,c_lime,1)
           draw_sprite_ext(hpBar,0,5,207-i*10,max((energy/100)*60,0),1,0,c_orange,1)
          draw_set_colour(c_dkgray)
          if stats[0,0]/stats[0,1]&lt;0.4
             draw_set_colour(c_red)
          var text="LV:"+string(lv)+" "+name
          if atkWait&gt;0
             draw_sprite(attackingicon,0,68,200-i*10)
          else if wait=1{
               if targ!=noone&amp;&amp;targ.guild!=guild
               draw_sprite(targetIcon,0,68,200-i*10)
               else if xx=rx&amp;&amp;yy=ry
               draw_sprite(retreaticon,0,70,200-i*10)
               else
               draw_sprite(walking,0,68,200-i*10)
             }
          /*if auto&gt;0{
             draw_sprite(automove,0,78,200-i*10)
          }*/
          draw_text(6,195-i*10,text)
          if pl=0
          draw_sprite_ext(allyUnits,-1,x-view_xview[pl],y-view_yview[pl],1,1,0,-1,0.8)
          else if pl=1
          draw_sprite_ext(allyUnits,-1,x-view_xview[pl]+180,y-view_yview[pl],1,1,0,-1,0.8)
       personType=au
       }
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///actionmenue
/*var p=player
var r=0
with NMenu
     r=ready[p]
draw_set_font(pixelFont)
if pause=2{
   draw_set_colour(c_dkgray)
    draw_rectangle(260,213,359,228,false)
    if r=0{
        draw_set_colour(c_red)
        draw_text_transformed(263,205,"NOT READY",2,2,0)
        }
    else{
         draw_set_colour(c_lime)
         draw_text_transformed(263,205,"READY",2,2,0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw unit over 
var cur=select_and_update_unit_list();
var over=get_unit_collision_nocontrol(cur);
if over!=noone
if over.visable&gt;0
if instance_exists(cur){
   draw_set_colour(c_dkgray)
   draw_rectangle(5,5,100,25,false)
   draw_set_colour(c_ltgray)
   draw_set_font(pixelFont)
   var text="LV:"+string(over.lv)+" "+over.name
   draw_text(7,12,text)
   draw_sprite_ext(hpBar,0,7,7,90,3.5,0,c_ltgray,1)
   with over{
       if dmg&gt;=stats[0,0]{
       draw_sprite_ext(hpBar,0,7,7,(dmg/stats[0,1])*90,3.5,0,c_red,1)
       draw_sprite_ext(hpBar,0,7,7,(stats[0,0]/stats[0,1])*90,3.5,0,c_lime,1)}
       else{
       draw_sprite_ext(hpBar,0,7,7,(stats[0,0]/stats[0,1])*90,3.5,0,c_green,1)
        draw_sprite_ext(hpBar,0,7,7,(dmg/stats[0,1])*90,3.5,0,c_lime,1)}
       draw_set_colour(c_black)
       if  dmg&gt;stats[0,0]
          draw_set_colour(c_red)
       //draw_text(8,207,"HP:"+string(stats[0,0])+"/"+string(stats[0,1]));
       draw_text(8,2,"HP:"+string(floor(dmg))+"/"+string(stats[0,1]));
       draw_sprite_ext(hpBar,0,7,15,max((energy/100)*90,0),1,0,c_orange,1)
       //draw other stats
       draw_set_colour(c_dkgray)
       draw_rectangle(103,5,160,30,false)
       draw_set_colour(c_ltgray)
       if levelPlus=1{
           draw_sprite_ext(hpBar,0,130,07,(stats[0,2]/200)*24,2,0,c_white,1)
           draw_sprite_ext(hpBar,0,130,13,(stats[0,3]/200)*24,2,0,c_white,1)
           draw_sprite_ext(hpBar,0,130,19,(stats[0,4]/200)*24,2,0,c_white,1)
           draw_sprite_ext(hpBar,0,130,25,(stats[0,6]/200)*24,2,0,c_white,1)
           }
       else{
            draw_sprite_ext(hpBar,0,130,07,(stats[0,2]/10)*24,2,0,c_white,1)
           draw_sprite_ext(hpBar,0,130,13,(stats[0,3]/10)*24,2,0,c_white,1)
           draw_sprite_ext(hpBar,0,130,19,(stats[0,4]/10)*24,2,0,c_white,1)
           draw_sprite_ext(hpBar,0,130,25,(stats[0,6]/10)*24,2,0,c_white,1)
       }
       draw_text(104,1,"ATK:"+string(ceil(stats[0,2])));
       draw_text(104,7,"DEF:"+string(ceil(stats[0,3])));
       draw_text(104,13,"TEC:"+string(ceil(stats[0,4])));
       draw_text(104,19,"LUC:"+string(ceil(stats[0,6])));
       draw_set_colour(c_orange)
        draw_text(8,25,string(floor(get_unit_worth())))
   }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
