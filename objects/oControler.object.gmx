<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cruser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bossList = ds_list_create()
ds_list_add(bossList,oDragon1)
ds_list_add(bossList,oWurm)
instance_create(x-view_wview/2,y-view_hview/2,oCamera)
psudoRight = 0
mouse_xprevious = mouse_x
mouse_yprevious = mouse_y
image_speed=0.1
var width=room_width/15;
var height=room_height/15;
map=ds_grid_create(width,height)
level = 1
playerColour[0]=make_colour_hsv(163, 240, 250);//close to blue
playerColour[1]=c_lime
playerColour[2]=c_red
playerColour[3]=c_yellow

for (var i =0 ; i &lt;4;i++)
    playerGold[i]=0

global.colourSwitch[0]=0
global.colourSwitch[1]=0
global.colourSwitch[2]=0
global.colourSwitch[3]=0

window_set_size(view_wview*3,view_hview*3+3)
playerMax=4
playerMin=0

maxChar = 8

unitStarted=0

logVisable=0
for (var i=0;i&lt;20;i++)
    log[i]=""

window_set_cursor( cr_none)

for (var i=0;i&lt;playerMax;i++){
    unitSelect[i]=-1
    hp[i]=0
    pow[i]=0
    mov[i]=0
    range[i]=0
    des[i]=0
    }
    
viewW = view_wview
viewH = view_hview
    
hit=0
gridAlpha=0.1
miss=0
cur=0
hold=0
delay=0
viewTurn=0
turnTime=0
timePhase0=0//selecting
timePhase1=0//moving
timePhase3=0//to attack
timePhase4=0//attacking 1
timePhase5=0//attacking 2
timePhase8=0//using skill
timePhase11=0//skill
currentNumber=0
globalvar pixelFont,pixelBlock,pixelSquish;
pixelFont=font_add_sprite_ext(letters,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890.?![]()/\&lt;&gt;:-+'%",true,1)
pixelBlock=font_add_sprite_ext(lettersBlock,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890.?![]()/\&lt;&gt;:-+'%",true,1)
pixelSquish=font_add_sprite_ext(lettersBlock,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890.?![]()/\&lt;&gt;:-+'%",true,-1)
unitList=ds_list_create()
allUnits=ds_list_create()
aiTurns=ds_map_create()
//mapped to -1 is ai
ds_map_add(aiTurns,0,0)
ds_map_add(aiTurns,1,-1)
ds_map_add(aiTurns,2,-1)
allyMatrix=ds_grid_create(3,3)
ds_grid_clear(allyMatrix,0)
// 0 = netrual , -1 = enemy, 1 = ally
//0 = player 1
//1 = enemy
//2 = allies
allyMatrix[# 0,2]=-1
allyMatrix[# 2,0]=-1

allyMatrix[# 1,2]=-1
allyMatrix[# 2,1]=-1
xx=x
yy=y

//info stuff
ix=-1
iy=-1
itext=""

controler=0
camTurnDir=0
eventScene=0
selected=noone
eventOver=noone
keys[0]=ord('W')
keys[1]=ord('A')
keys[2]=ord('S')
keys[3]=ord('D')
keys[4]=ord('F')
keys[5]=ord('G')
keys[6]=ord('Q')
keys[7]=ord('E')
display_set_gui_size(360,240);
globalvar grid;
grid = mp_grid_create(0,0,(room_width)/15+2,(room_height)/15+1,15,15);
//used to determain what actions you can take
phase=0
menuSel=0
menuSel2=-1
loop=0
//ai
priorityLimit=-1
option=0

currentTurn=0
turnsSurvive=0
gridF1= ds_grid_create((room_width)/15+1,(room_height)/15+1);
ds_grid_clear(gridF1,-1)
gridF2= ds_grid_create((room_width)/15+1,(room_height)/15+1);
ds_grid_clear(gridF2,-1)
infoTime=0
target=noone
globalvar hour,minu;//1 turn = 10 min
hour=7
minu=0

globalvar randNum,randPos;
randPos=0;
for (var i=0;i&lt;1000;i++){
    randNum[i]=irandom(99)
}
//for sprite idle
globalvar udg,ch;
udg=1
ch=0
var inst,inst2;
/*
inst=instance_create(x,y,oFighter);
ds_list_add(unitList,inst)
xx=inst.xx
yy=inst.yy
view_xview=inst.xx-view_wview/2
view_yview=inst.yy-view_hview/2
//inst.xp=100
inst=instance_create(x+15,y,oArcher);
ds_list_add(unitList,inst)
inst=instance_create(x+15,y+15,oHealer);
ds_list_add(unitList,inst)
inst=instance_create(x,y+15,oMage);
ds_list_add(unitList,inst)*/
//inst=instance_create(x,y,oCampfire);
//inst.ai=0 
var sx=15;
var sy=15;
/*inst=instance_create(x-15*sx,y+15*sy,oMerchant)
inst.team=1
inst.ai=5
inst.xp=40
inst.marker=2
inst2=instance_create(x-15*(sx+1),y+15*sy,oHealer)
inst2.team=1
inst2.ai=3
inst2.link=inst
inst2.xp=40
inst2=instance_create(x-15*(sx+2),y+15*sy,oFighter)
inst2.team=1
inst2.ai=4
inst2.link=inst
inst2.xp=40
/*
inst=instance_create(x+15*36,y-15*17,oDragon1)
inst.team=2
inst.marker=1

create_boss_area(x-15*20,y-15*15,0,0)
inst=instance_create(x-15*19,y-12*15,oWurm)
inst.team=2
inst.ai=1
inst.marker=1
inst.dir=3
for(var i=1;i&lt;=2;i++){
inst2=instance_create(x-(19)*15,y-(12+1)*15,oWurm)
inst2.team=2
inst2.ai=-1
inst2.link=inst
inst=inst2
}
for(var i=0;i&lt;=6;i++){
inst2=instance_create(x-(19-i)*15,y-(14)*15,oWurm)
inst2.team=2
inst2.ai=-1
inst2.link=inst
inst=inst2
}
create_city_dungeon(x+15*12,y+15*10)
add_all_to_map()
show_debug_overlay(true)*/
/*
for (var i=0;i&lt;ds_list_size(unitList);i++){
    selected=ds_list_find_value(unitList,i)
    update_fog()
}selected=noone*/
alarm[9]=1//activation cycle
//update_view_zone()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu stuff
menu=0
menuSelect=0
playerSelect=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debugging
globalvar debugging;
global.production=0
global.mobile=0
global.vertical = 0
debugging=0
debugObj=0
debug1=0;
if global.production=1
    randomize()
else
    {
    show_debug_overlay(1)
    }
global.tutorial = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check end turn
//show_debug_message("control alarm 10")
if selected=noone{
phase=0
//update_fog()
//selected=noone
check_turn_end()
add_all_to_map()
}
//alarm[10]=30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///activate things
if menu = -1{
instance_deactivate_all(true)
instance_activate_region(xx-15-view_wview/2,yy+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
instance_activate_region(view_xview-15,view_yview+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
if selected!=noone
    instance_activate_region(selected.x-15-view_wview/2,selected.y+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
}
else 
instance_activate_all()
/*
    instance_deactivate_all(true)
instance_activate_region(xx-view_wview,yy-view_wview,view_wview*2,view_wview*2,true)
instance_activate_region(view_xview-view_wview,view_yview-view_wview,view_wview*2,view_wview*2,true)
if selected!=noone
    instance_activate_region(selected.x-view_wview,selected.y-view_wview,view_wview*2,view_wview*2,true)
*/
//alarm[8]=1*/
alarm[9]=2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end turn

if selected!=noone{
    //instance_activate_all()
    //alarm[9]=3
    //alarm[4]=2
    with selected{
    wait=1

    xx=x
    yy=y
    //move_camera(x,y)
    }
    
    //events  
    var inst = instance_place(selected.x,selected.y,oKey)
    if inst!=noone
    if findStatus(selected,1)&lt;0{
        with inst
            instance_destroy()
        addStatus(1,selected,1,1)
    }
    
    inst = instance_place(selected.x,selected.y,oCoin)
    if inst!=noone
    if findStatus(selected,2)&lt;0{
        with inst
            instance_destroy()
        addStatus(1,selected,2,1)
    }
    
    inst = instance_place(selected.x,selected.y,oTeleporter)
    var c = selected
    if inst!=noone{
        with (oTeleporter){
            if id != inst
            if !place_meeting(x,y,oUnit)
            if colourId = inst.colourId{
                c.x = x
                c.y = y
                c.xx=c.x
                c.yy=c.y
                if c.draw&gt;0
                    move_camera(c.xx,c.yy)
                oControler.x = c.x
                oControler.y = c.y
                oControler.xx = c.x
                oControler.yy =c.y
            }
        }
    }
    
    //stairs
    if floor(selected.team)=0
    if place_meeting(selected.x,selected.y,oStairs){
        level++;
        menu = 98;
        instance_create(x,y,oNextFloor)
        x=0
        y=0
        xx=0
        yy=0
        for (var i=0;i&lt;ds_list_size(unitList);i++){
            var char=ds_list_find_value(unitList,i)
            if instance_exists(char){
                instance_activate_object(char)
                if findStatus(char,2)&gt;=0{
                    playerGold[0]+=1
                }
            }
        }
    }
    
    
    phase=0
    if menu =-1{
    instance_activate_all()
    update_fog()
    selected=noone
    check_turn_end()
    add_all_to_map()
    }
}
//for ai
priorityLimit=-1
option=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#1 move to unit on current turn
var i=0
if !eventScene
if menu=-1
if ds_map_find_value(aiTurns, currentTurn)&gt;=0
if selected=noone
if mouse_check_button_released(mb_right)
||keyboard_check_pressed(keys[5]){
    if !ds_list_empty(unitList){
        var inst=ds_list_find_value(unitList,currentNumber)
        instance_activate_object(inst)
        if instance_exists(inst)
        {
            if xx=inst.x
            &amp;&amp; yy=inst.y{
                currentNumber++
                if currentNumber&gt;=ds_list_size(unitList)
                    currentNumber=0
                inst=ds_list_find_value(unitList,currentNumber)
                var lim=0;
                while (lim&lt;ds_list_size(unitList)&amp;&amp;instance_exists(inst)&amp;&amp;inst.wait=1){
                    currentNumber++
                    if currentNumber&gt;=ds_list_size(unitList)
                        currentNumber=0
                    inst=ds_list_find_value(unitList,currentNumber)
                    lim++
                }
                x=inst.xx
                y=inst.yy
                xx=x
                yy=y
                move_camera(xx,yy)
            }else{
                var lim=0;
                while (lim&lt;ds_list_size(unitList)&amp;&amp;instance_exists(inst)&amp;&amp;inst.wait=1){
                    currentNumber++
                    if currentNumber&gt;=ds_list_size(unitList)
                        currentNumber=0
                    inst=ds_list_find_value(unitList,currentNumber)
                    lim++
                }
                x=inst.xx
                y=inst.yy
                xx=x
                yy=y
                move_camera(xx,yy)
            }
        }
        /*var inst=ds_list_find_value(unitList,0)
        while(i&lt;ds_list_size(unitList)&amp;&amp;inst.wait!=0){
            i++
            inst=ds_list_find_value(unitList,i)
        }
        {
            x=inst.xx
            y=inst.yy
            xx=x
            yy=y
            view_xview=inst.xx-view_wview/2
            view_yview=inst.yy-view_hview/2
        }*/
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#2 when a unit is selected
if selected!=noone
if menu=-1
{
if ds_map_find_value(aiTurns, currentTurn)&gt;=0{
    //instance_deactivate_all(true)
    instance_activate_region(view_xview,view_yview,view_wview,view_hview,true)
    instance_activate_region(selected.x-view_wview/2,selected.y-view_hview/2,view_wview,view_hview,true)
    var c=selected
    if c.mov&lt;=0
    if phase=0
        phase=2
    //movement
    if mouse_check_button_released(mb_left)
    ||keyboard_check_pressed(keys[4])
    if phase=0
    {
    {
        add_all_to_map()
        mp_grid_clear_cell(grid,c.x/15,c.y/15)
        
            for (var i=0;i&lt;ds_list_size(unitList);i++){
            var char=ds_list_find_value(unitList,i)
                if instance_exists(char){
                    mp_grid_clear_cell(grid,char.x/15,char.y/15)
                }
            }
        
        
            if mp_grid_get_cell(grid,xx/15,yy/15)=0
            {
            if (mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,xx+7.5,yy+7.5,false)
            &amp;&amp;ds_grid_get(gridF1,xx/15,yy/15)&gt;=0&amp;&amp;!place_meeting(xx,yy,oUnit))  
            ||(c.x==xx&amp;&amp;c.y==yy)
                {
    
                if c.mov&gt;=path_get_number(c.path)-1{
                    //check to snap to grid
                   with c{
                       path_start(path,3,path_action_stop,false)
                       }
                   phase=1
                   }else {
                   //message_create("too far")     
                    phase=0
                    add_all_to_map()
                    if !global.mobile{
                    xx=selected.xx
                    yy=selected.yy
                    }
                    selected=noone 
                   }     
               }
               else {
                   //message_create("too far")     
                    phase=0
                    add_all_to_map()
                    if !global.mobile{
                    xx=selected.xx
                    yy=selected.yy
                    }
                    selected=noone 
                   } 
               //else message_create("caNNot move there")
            }else {
                   //message_create("too far")     
                    phase=0
                    add_all_to_map()
                    if !global.mobile{
                    xx=selected.xx
                    yy=selected.yy
                    }
                    selected=noone 
                   } 
            //else message_create("caNNot move there")
        }
    }


    if mouse_check_button_released(mb_right)
    ||keyboard_check_pressed(keys[5]){
        if phase!=0{
            move_camera(c.x,c.y)
        }
        if phase=0{
            phase=0
            add_all_to_map()
            {
            xx=selected.xx
            yy=selected.yy
            }
            selected=noone
            }
        else if phase=3{
            with selected{
            x=xx
            y=yy
            xprevious=x
            yprevious=y
            move_camera(x,y)
            }
            phase=0
            {
            xx=selected.xx
            yy=selected.yy
            }
            add_all_to_map()
            if selected.mov&lt;=0
                selected=noone
            }
    }
    
    else if phase=1{
    if global.mobile{
        move_camera(c.x,c.y)
        }
    if (c.path_position=1)||path_get_length(c.path)&lt;1
        ||path_get_number(c.path)&lt;1
        {
               phase=3
               menuSel=0
               add_all_to_map()
               move_camera(c.x,c.y)
        }
        menuSel=0
    }
    else if phase=3{//attack   
        if mouse_check_button_released(mb_left)
        ||keyboard_check_pressed(keys[4]){
            if ((abs(xx-c.x)+abs(yy-c.y))/15&lt;=0)
            //&amp;&amp;c.pow&gt;0
            {//end turn
                alarm[0]=2
                phase=2.1
            }
            else{
                var atk_type = return_attack_type(c.unit)
                var inst = instance_place(xx,yy,oUnit);
                var normalAttack = 1
                
                if inst!=noone
                &amp;&amp; inst.object_index == oLockDoor
                &amp;&amp; ((abs(xx-c.x)+abs(yy-c.y))/15&lt;=1){
                    show_debug_message("door")
                    if (c.statusStr[findStatus(c,1)]&gt;0){
                        addStatus(1,c,1,-1)
                        alarm[0]=2
                        phase=2.1
                        with inst
                            instance_destroy()
                        normalAttack = 0
                    } else message_create("Need Key")
                } 
                
                if normalAttack{//normal attack
                    switch atk_type{
                        case 0:
                            if (abs(xx-c.x)+abs(yy-c.y))/15&lt;=return_wep_range(c.unit)
                            &amp;&amp; inst!=noone
                            &amp;&amp; inst!=selected
                            &amp;&amp; !object_is_ancestor(inst.object_index,oBlock){
                                //good target
                            }
                            else
                                inst = noone
                            break;
                        case 1: //no move, attack anywhere
                            if (c.x != c.xx || c.y != c.yy){//moved
                                inst = noone
                            }else if (abs(xx-c.x)+abs(yy-c.y))/15&lt;=return_wep_range(c.unit){
                                if inst!=noone
                                &amp;&amp; inst!=selected
                                &amp;&amp; !object_is_ancestor(inst.object_index,oBlock){
                                    //good target
                                }
                                else if inst = noone{//target the ground
                                    inst = instance_create(xx,yy,oTempTarg)
                                    phase=4
                                    loop=1
                                    selected.dir=floor(point_direction(selected.x+7,selected.y+7,inst.x+7,inst.y+7)/90)
                                    target=inst
                                } else 
                                    inst = noone 
                            }
                            else {
                                inst = noone//not in range
                                }
                            break;
                        case 2: //no move
                            if (c.x != c.xx || c.y != c.yy){//moved
                                inst = noone
                            }else if (abs(xx-c.x)+abs(yy-c.y))/15&lt;=return_wep_range(c.unit){
                                if inst!=noone
                                &amp;&amp; inst!=selected
                                &amp;&amp; !object_is_ancestor(inst.object_index,oBlock){
                                    //good target
                                }
                                else 
                                    inst = noone 
                            }
                            else {
                                inst = noone//not in range
                                }
                            break
                        case 3: //attack anywhere
                            if (abs(xx-c.x)+abs(yy-c.y))/15&lt;=return_wep_range(c.unit){
                                if inst!=noone
                                &amp;&amp; inst!=selected
                                &amp;&amp; !object_is_ancestor(inst.object_index,oBlock){
                                    //good target
                                }
                                else if inst = noone{//target the ground
                                    inst = instance_create(xx,yy,oTempTarg)
                                    phase=4
                                    loop=1
                                    selected.dir=floor(point_direction(selected.x+7,selected.y+7,inst.x+7,inst.y+7)/90)
                                    target=inst
                                } else 
                                    inst = noone 
                            }
                            else {
                                inst = noone//not in range
                                }
                            break;
                    }//end switch
                    if inst!=noone{
                        phase=4
                        loop=1
                        selected.dir=floor(point_direction(selected.x+7,selected.y+7,inst.x+7,inst.y+7)/90)
                        target=inst
                    } else{
                        if 1{
                        with selected{
                        x=xx
                        y=yy
                        xprevious=x
                        yprevious=y
                        move_camera(x,y)
                        }
                        phase=0
                        if !global.mobile{
                            xx=selected.xx
                            yy=selected.yy
                            }
                        add_all_to_map()
                        if selected.mov&lt;=0
                            selected=noone
                            }
                        message_create("No target")
                    }
                }
            }
        }
    }//end phase 3
    
}

if phase=4{//damage step
var c=selected
//var inst=instance_place(xx,yy,oUnit);
if instance_exists(target){
//attacking "animation"
c.ax=cos(degtorad(point_direction(selected.x+7,selected.y+7,target.x+7,target.y+7)))*5
c.ay=-sin(degtorad(point_direction(selected.x+7,selected.y+7,target.x+7,target.y+7)))*5
c.alarm[0]=6
c.dir=round(point_direction(selected.x+7,selected.y+7,target.x+7,target.y+7)/90)
//timer before next action
//var k=return_multi_atk(c.item[c.wep]);
if (selected.draw=0
&amp;&amp; ds_grid_get(gridF1,target.x/15,target.y/15)&lt;0.2)
&amp;&amp;debugging=0{
    alarm[0]=1
    }
else{
    alarm[0]=max(13)
    }
//calculate dmg

var atk_area=instance_create(target.x,target.y,oTempTarg);
atk_area.depth=10000//-y*cos(degtorad(view_angle))+x*sin(degtorad(view_angle))
var targ = target
if return_wep_aoe(c.unit)&gt;0{
    atk_area.x = c.x+7
    atk_area.y = c.y+7
    atk_area.sprite_index = return_wep_sprite_eff(c.unit)
    atk_area.mask_index = return_wep_sprite_eff(c.unit)
    atk_area.image_angle=round(point_direction(c.x,c.y,target.x,target.y)/90)*90

    var eff=instance_create(c.x+7,c.y+7,oEff);
    eff.sprite_index=return_wep_sprite_eff(c.unit)
    eff.image_angle=round(point_direction(c.x,c.y,target.x,target.y)/90)*90+view_angle
    eff.rotate=!no_rotate_attack(eff.sprite_index)
    audio_play_sound(return_wep_sound(c.unit),50,false)
    
    with (atk_area)
        targ = instance_place(x,y,oChar)
}
while (targ!=noone){
    if (targ!=c)
    if calculate_damage(c,targ,0)&gt;0{
        //create eff
        if (!(c.draw=0
        &amp;&amp; ds_grid_get(gridF1,targ.x/15,targ.y/15)&lt;0.2)
        ||debugging)
        if return_wep_aoe(c.unit)=0{
            var eff=instance_create(targ.x+7,targ.y+7,oEff);
            eff.sprite_index=return_wep_sprite_eff(c.unit)
            eff.image_angle=point_direction(c.x,c.y,
                    targ.x,targ.y)+view_angle
            eff.rotate=!no_rotate_attack(eff.sprite_index)
            audio_play_sound(return_wep_sound(c.unit),50,false)
        }
    }
    else{
        //if (!(c.draw=0
        //&amp;&amp; ds_grid_get(gridF1,targ.x/15,targ.y/15)&lt;0.2)
        //||debugging)
        //    audio_play_sound(sMiss,50,false)
    }
    instance_deactivate_object(targ)
    with (atk_area)
        targ = instance_place(x,y,oChar)
}
instance_activate_all()

//end damage calc
phase=5    
}
else{
    alarm[0]=2
    loop=1
    phase=5
}
}//end phase 4
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#3 move controler
if menu=-1
{
//NEW!
xx=floor(xx/15)*15
yy=floor(yy/15)*15
if phase&lt;=0
||phase=3
||phase=7
||phase=11
||phase=9

if (ds_map_find_value(aiTurns, currentTurn)&gt;=0&amp;&amp;!eventScene)||
(debugging=1){
room_speed=30
xx=clamp(xx,0,room_width-15)
yy=clamp(yy,0,room_height-15)
if controler=0{
if !global.mobile||mouse_check_button(mb_left){
    xx=floor(mouse_x/15)*15
    yy=floor(mouse_y/15)*15}
}
var del=4
if !eventScene||debugging=1
{
if delay=0
{
        del=max(1,del-hold)
    if keyboard_check(keys[0]){
        yy-=15*round(dcos(-view_angle))
        xx-=15*round(dsin(-view_angle))
        controler=1
        delay=del
        hold++
        audio_play_sound(sMoveCruser,50,false)
        }
    else if keyboard_check_released(keys[0]){
        delay=0
    }
    if keyboard_check(keys[1]){
        xx-=15*round(dcos(-view_angle))
        yy+=15*round(dsin(-view_angle))
        controler=1
        delay=del
        hold++
        audio_play_sound(sMoveCruser,50,false)
        }
    else if keyboard_check_released(keys[1]){
        delay=0
    }
    if keyboard_check(keys[2]){
        yy+=15*round(dcos(-view_angle))
        xx+=15*round(dsin(-view_angle))
        controler=1
        delay=del
        hold++
        audio_play_sound(sMoveCruser,50,false)
        }
    else if keyboard_check_released(keys[2]){
        delay=0
    }
    if keyboard_check(keys[3]){
        xx+=15*round(dcos(-view_angle))
        yy-=15*round(dsin(-view_angle))
        controler=1
        delay=del
        hold++
        audio_play_sound(sMoveCruser,50,false)
        }
    else if keyboard_check_released(keys[3]){
        delay=0
    }
    if !keyboard_check(keys[0])
    if !keyboard_check(keys[1])
    if !keyboard_check(keys[2])
    if !keyboard_check(keys[3])
        hold=0
    if keyboard_check(keys[4])
    ||keyboard_check(keys[5]){
        controler=1
    }
}
else if delay&gt;0 delay--
}
if mouse_check_button_released(mb_left)
|| mouse_check_button_released(mb_right)
    controler=0
//view angle
}

//if global.production=0{
if keyboard_check_pressed(keys[6])
    viewTurn--
else if keyboard_check_pressed(keys[7])
    viewTurn++
//}

if view_angle!=viewTurn*90
    view_angle-=9*sign(view_angle-viewTurn*90)

if view_angle&gt;360&amp;&amp;viewTurn*90&gt;360{
    view_angle=0
    viewTurn=1
    }
else if view_angle&lt;0&amp;&amp;viewTurn&lt;0{
    view_angle=360
    viewTurn=3
    }
if abs(xx-x)&gt;1
   x+=(xx-x)/2
else
    x=xx
if abs(yy-y)&gt;1
   y+=(yy-y)/2
else
    y=yy


//select unit
if mouse_check_button_released(mb_left)
||keyboard_check_pressed(keys[4])
if phase=0
if selected=noone
if !eventScene
{
    var inst=instance_place(xx,yy,oChar)
    if inst!=noone
    if !object_is_ancestor(inst.object_index,oObj)
    if inst.team=currentTurn
    if inst.wait=0{
        selected=inst
        if controler=1 || global.mobile=1
        move_camera(selected.x,selected.y)
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#4 ai
//speed up game
/*if ds_map_find_value(aiTurns, currentTurn)&lt;0
room_speed=1000
else
room_speed=30
*/
if ds_map_find_value(aiTurns, currentTurn)&lt;0
if menu=-1
//if alarm_get(0)&lt;=0
//if alarm_get(3)&lt;=0
//if alarm_get(9)=2
{
    if selected=noone
    if !eventScene
    {
        instance_activate_all()
        for (var i=0;i&lt;ds_list_size(unitList);i++){
           var char=ds_list_find_value(unitList,i)
           if char!=noone
           if instance_exists(char)
           if char.wait=0
           if char.hp&gt;0{
           if !instance_exists(char.link)||char.link.wait=1
           {
                selected=char
           }
           }
        }
        instance_deactivate_all(true)
        alarm[9]=2
        /*with oChar{
            if team=ct
            if wait=0{
                c=id
                break
                }
        }*/
        //selected=c
        if selected!=noone{
            var c=selected
            if !debugging{
            if selected.draw=0
                room_speed=1000
            else
                room_speed=30
            }
            else room_speed=30
            
            if selected.mov&gt;0
            phase=0
            else{ 
                phase=3
                if !ds_grid_get(gridF1,selected.x/15,selected.y/15)&lt;0.2||debugging=1
                if (selected.x&lt;view_xview+15
                || selected.x&gt;view_xview+view_wview-15
                || selected.y&lt;view_yview+15
                || selected.y&gt;view_yview+view_hview-15)
                {
                    show_debug_message('move cam')
                    xx=selected.x
                    yy=selected.y
                    x=xx
                    y=yy
                    move_camera(xx,yy)
                    //oCamera.x = xx
                    //oCamera.y = yy
                    //view_xview = xx - view_wview/2
                    //view_yview = yy - view_hview/2
                }
            }
            instance_activate_region(view_xview-15,view_yview+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
            instance_activate_region(selected.x-15-view_wview/2,selected.y+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
            }
        else{
            check_turn_end()
            }
    }
    if selected!=noone
    if instance_exists(selected)
    //if alarm_get(0)&lt;=0
    //if alarm_get(9)&lt;=1
    if alarm[9]&lt;=1
    {
    
    if !debugging{
    if selected.draw=0
        room_speed=1000
    else
        room_speed=30
    }
    else room_speed=30
    
    instance_activate_region(view_xview-15,view_yview+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
    instance_activate_region(selected.x-15-view_wview/2,selected.y+view_hview/2-view_wview/2-15,view_wview+30,view_wview+30,true)
    //boss heal
    if selected.marker=1
    if selected.combat&lt;=0
    {
        //selected.hp=min(selected.hp+1,selected.mhp)
    }
    /*
    phase
    1
    3 attack
    */
    if phase=0{
        var close=noone
        var c=selected
        var toItem=false
        var command=-1;
        /*
        commands
        0 boss only, follow link, or become new lead
        1 moves in a straight line, turns when needed
        2 follows link, or moves to link's target
        3 follows link
        4 follows link, or moves to what link was last hit by, or fends of monster
        5 run
        */
        switch c.ai{
            case -1:command=0 break;
            case 1:command=1 break;
            case 2:command=2 break;
            case 3:command=3 break;
            case 4:command=4 break;
            case 5:command=1 break;
            case 6:
                //if hp&lt;50% run
                /*if c.hp/c.mhp&lt;=0.5
                    command=5
                //attacks
                else */
                    command=2
                //if near ally, follow
                if c.link=noone{
                    var dis=3
                    for(var i=-dis;i&lt;=dis;i+=1)
                    for(var j=-dis;j&lt;=dis;j+=1){
                        var in=instance_place(c.x+i*15,c.y+j*15,oChar)
                        if in!=noone
                        if in.team=c.team
                        if in.link==noone
                        if in!=c
                            c.link=in
                    }
                }
                break;
        }
        //get closest
        with (oChar){
            var u=id
            if oControler.allyMatrix[# c.team,team]&lt;0//team!=c.team
            //if (c.ai!=2||object_is_ancestor(object_index,oMonster))
            //abs(close.x-c.x)+abs(close.y-c.y)&gt;abs(x-c.x)+abs(y-c.y)
            {
                add_all_to_map()
                mp_grid_clear_cell(grid,c.x/15,c.y/15)
                mp_grid_clear_cell(grid,u.x/15,u.y/15)
                if mp_grid_path(grid,u.path,c.x+7.5,c.y+7.5,u.x+7.5,u.y+7.5,false)
                with oControler{
                    if close=noone||floor(path_get_length(c.path)/15)&gt;floor(path_get_length(u.path)/15){
                        close=u
                        mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,u.x+7.5,u.y+7.5,false)
                        }
                }
            }
        }
        
        switch command{
        //following ai for wurm boss
        case 0:{
            if instance_exists(c.link) 
            &amp;&amp; (abs(c.link.x - c.x) + abs(c.link.y - c.y))/15 &lt;= 2
                close=c.link  
            else{
                c.link=noone
                c.ai=1
                c.marker=1
                c.close=noone
                //c.wait=1
                }
            }break;
        case 1:{
                //if there is an object in way
                if instance_place(c.x+15*cos(degtorad(c.dir*90)),c.y-15*sin(degtorad(c.dir*90)),oUnit)
                ||c.x+15*cos(degtorad(c.dir*90))&lt;0+15*3
                ||c.x+15*cos(degtorad(c.dir*90))&gt;room_width-15*3
                ||c.y-15*sin(degtorad(c.dir*90))&lt;0+15*3
                ||c.y-15*sin(degtorad(c.dir*90))&gt;room_height-15*3{
                    //turn 90 left or right
                    var rand=choose(1,-1)
                    if instance_place(c.x+15*cos(degtorad((c.dir+rand)*90)),c.y-15*sin(degtorad((c.dir+rand)*90)),oObj)
                        rand*=-1
                    close=instance_create(c.x+15*(c.mov+1)*cos(degtorad((c.dir+rand)*90)),c.y-15*(c.mov+1)*sin(degtorad((c.dir+rand)*90)),oTempTarg)
                }
                else{
                    close=instance_create(c.x+15*(c.mov+1)*cos(degtorad((c.dir)*90)),c.y-15*(c.mov+1)*sin(degtorad((c.dir)*90)),oTempTarg)
                    }
                }
                /*
                //move in a straight line ai for wurm boss
                else if c.ai=1{
                    //if there is an object in way
                    if instance_place(c.x+15*cos(degtorad(c.dir*90)),c.y-15*sin(degtorad(c.dir*90)),oObj){
                        //turn 90 left or right
                        var rand=choose(1,-1)
                        if instance_place(c.x+15*cos(degtorad((c.dir+rand)*90)),c.y-15*sin(degtorad((c.dir+rand)*90)),oObj)
                            rand*=-1
                        close=instance_create(c.x+30*cos(degtorad((c.dir+rand)*90)),c.y-30*sin(degtorad((c.dir+rand)*90)),oTempTarg)
                    }
                    else{
                        close=instance_create(c.x+30*cos(degtorad((c.dir)*90)),c.y-30*sin(degtorad((c.dir)*90)),oTempTarg)
                        }
                }*/
            break

        //linked ai that follows and attacks
        case 2:{
            if instance_exists(c.link){
                //NOTE aggro is reset at the start of each turn
                if c.link.aggro!=noone&amp;&amp;instance_exists(c.link.aggro){
                    close=c.link.aggro
                }
                else 
                    close=c.link
            }
            else{
                c.link=noone
            }
            }break
        case 3:{//just follows
            if instance_exists(c.link){
                close=c.link
            }
            else{
                c.link=noone
            }
            }break; 
        case 4:{//follows and revenge against last hit or targets nearest
            if instance_exists(c.link){
                //NOTE aggro is reset at the start of each turn
                if c.link.lastHitBy!=noone&amp;&amp;instance_exists(c.link.lastHitBy){
                    close=c.link.lastHitBy
                }
                else if (abs(c.link.x-c.x)/15+abs(c.link.y-c.y)/15&gt;=c.mov+1)||
                    close!=noone&amp;&amp;((abs(close.x-c.x)/15+abs(close.y-c.y)/15&gt;=c.mov+1)
                    ||!object_is_ancestor(close.object_index,oMonster))
                    close=c.link
            }
            else{
                c.link=noone
            }
        }break;
        case 5:
            if close!=noone&amp;&amp;instance_exists(close){
            var fx=close.x
            var fy=close.y
            var further=0
            for (var i=-c.mov;i&lt;=c.mov;i++)
            for (var j=-c.mov;j&lt;=c.mov;j++){
                if point_distance(c.x+i*15,c.y+j*15,close.x,close.y)&gt;further
                if !place_meeting(c.x+i*15,c.y+j*15,oUnit)
                    {
                        fx=c.x+i*15
                        fy=c.y+j*15
                        further=point_distance(c.x+i*15,c.y+j*15,close.x,close.y)
                    }
            }
            close=instance_create(fx,fy,oTempTarg);
            }
            break
        }
        if close!=noone{
            //move towards it
             add_all_to_map()
             mp_grid_clear_cell(grid,c.x/15,c.y/15)
             mp_grid_clear_cell(grid,close.x/15,close.y/15)
            if mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,close.x+7.5,close.y+7.5,false){//checks if can move there
                //compares mac movement to how much you need to move
                //if (abs(close.x-c.x)+abs(close.y-c.y))/15&gt;c.mov
                if !toItem{//not traveling towards an item
                    if floor(path_get_length(c.path)/15)&gt;c.mov
                    {//travels furthest
                        mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,path_get_point_x(c.path,c.mov),
                            path_get_point_y(c.path,c.mov),false)
                       }
                    else {//travels one before target
                    mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,
                        path_get_point_x(c.path,path_get_number(c.path)-2),
                        path_get_point_y(c.path,path_get_number(c.path)-2),false)
                    }
                }//travels towards an item
                else{//traveling towards an item
                    if floor(path_get_length(c.path)/15)&gt;c.mov
                    {//travels furthest
                        mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,path_get_point_x(c.path,c.mov),
                            path_get_point_y(c.path,c.mov),false)
                       }
                    else {//travels totarget
                    mp_grid_path(grid,c.path,c.x+7.5,c.y+7.5,
                        path_get_point_x(c.path,path_get_number(c.path)-1),
                        path_get_point_y(c.path,path_get_number(c.path)-1),false)
                    }
                }
                //start the path
                //see if visable or not
                if (c.draw=0
                &amp;&amp; ds_grid_get(gridF1,path_get_x(c.path,1)/15,path_get_y(c.path,1)/15)&lt;0.2
                &amp;&amp;!debugging)
                ||keyboard_check(vk_space)
                {
                    with c{
                       //path_start(path,999,path_action_stop,false)
                       x=floor(path_get_x(path,1)/15)*15
                       y=floor(path_get_y(path,1)/15)*15
                       }
                       phase=3
                       menuSel=0
                       add_all_to_map()
                   }
                else{
                    var cx
                   var cy
                    with c{
                   path_start(path,3,path_action_stop,false)
                   cx=floor(path_get_x(path,1)/15)*15
                   cy=floor(path_get_y(path,1)/15)*15
                   }
                   //if you cant see the ai, camera moves to ai
                   if debugging{
                        xx=cx
                        yy=cy
                   }
                   if (cx&lt;view_xview+15
                    || cx&gt;view_xview+view_wview-15
                    || cy&lt;view_yview+15
                    || cy&gt;view_yview+view_hview-15)
                    //if !ds_grid_get(gridF1,selected.x/15,selected.y/15)&lt;0.2||debugging=1
                    //||debugging=1
                    {
                        show_debug_message('move cam2')
                        xx=cx
                        yy=cy
                        x=xx
                        y=yy
                        move_camera(xx,yy)
                        //oCamera.x = xx
                        //oCamera.y = yy
                    }
                   phase=1
                }
            }else phase=3
             
        
        }else{ 
            alarm[0]=1 
            phase=8}
    }//end phase 0
    if phase=1{
        var c=selected
        if (c.path_position=1)||path_get_length(c.path)&lt;1
            ||path_get_number(c.path)&lt;1
            {
                   phase=3
                   menuSel=0
                   add_all_to_map()
            }
    }
    else if phase=3{
        var command=-1;
        var c=selected
        option=0
        /*
        0 - attack
        */
        switch c.ai{
            case 2: break;
        }
        /*
        commands
        
        */
        
        
        {
            if (c.ai!=2||!instance_exists(c.link)||
            (c.link.aggro!=noone&amp;&amp;instance_exists(c.link.aggro)))
            &amp;&amp;(c.ai!=5)
            {//continue attack
                var range=return_wep_range(c.unit)
                var close=noone
                //get where you can attack
                    for (var i=-range*15;i&lt;=range*15;i+=15){
                        for (var j=-range*15;j&lt;=range*15;j+=15){
                        if abs(i/15)+abs(j/15)&lt;=range
                        if i!=0||j!=0{
                            var inst=instance_place(i+c.x,j+c.y,oUnit)
                            if inst!=noone
                            if !object_is_ancestor(inst.object_index,oObj)
                            if allyMatrix[# c.team,inst.team]&lt;0
                            if (c.ai!=2||object_is_ancestor(inst.object_index,oMonster))
                            if(c.ai!=3||object_is_ancestor(inst.object_index,oMonster))
                            if (c.ai!=4||object_is_ancestor(inst.object_index,oMonster))
                            if (c.ai!=5)
                            if close=noone||
                            abs(close.x-c.x)+abs(close.y-c.y)&gt;abs(inst.x-c.x)+abs(inst.y-c.y){
                                close=inst
                                }
                            }
                        }
                    }//end loop
                    if c.ai=2&amp;&amp;instance_exists(c.link)&amp;&amp;c.link.aggro!=noone&amp;&amp;instance_exists(c.link.aggro)
                    {
                        if abs((c.link.aggro.x-c.x)/15)+abs((c.link.aggro.y-c.y)/15)&lt;=range
                        {
                            close=c.link.aggro
                        }
                    }
                    else if c.ai=4&amp;&amp;instance_exists(c.link)&amp;&amp;c.link.lastHitBy!=noone&amp;&amp;instance_exists(c.link.lastHitBy)
                    {
                        if abs((c.link.lastHitBy.x-c.x)/15)+abs((c.link.lastHitBy.y-c.y)/15)&lt;=range
                        {
                            close=c.link.lastHitBy
                        }
                    }
                    
                    if c.ai=7//dont attack
                        close=noone
                        
                        
                    if close=noone
                    ||selected.ai=-1 {//no target
                        alarm[0]=1
                    }
                    else{//attack
                        loop=1
                        selected.dir=floor(point_direction(selected.x+7,selected.y+7,close.x+7,close.y+7)/90)
                        target=close
                        phase=4
                    }
                }else alarm[0]=1//ai 2 no attack
            }
            //cancel and kill self if no link or link is not in combat
            if c.ai=8{
            if !instance_exists(c.link)//||c.link.combat&lt;=0
            {
                c.hp=0
                phase=0
                selected=noone
            }
            }
        }//end phase 3
       
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#5 ai debug Timer
if global.production=0
if currentTurn=2{
switch phase{
    case 0: timePhase0++; break;
    case 1: timePhase1++; break;
    case 3: timePhase3++; break;
    case 4: timePhase4++; break;
    case 5: timePhase5++; break;
    case 8: timePhase8++; break;
    case 11: timePhase11++; break;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera movement
if global.production=0{

if viewW = 180{
    if view_wview &gt; viewW{
        view_wview-=(view_wview-viewW)/2
        view_hview-=(view_hview-viewH)/2
        eventScene = true
    }
    else{
        view_wview = 180
        view_hview = 120
        eventScene = false
    }  
}
else{
    if view_wview &lt; viewW{
        view_wview-=(view_wview-viewW)/2
        view_hview-=(view_hview-viewH)/2
        eventScene = true
    }
    else{
        view_wview = 360
        view_hview = 240
        eventScene = false
    }
}

if selected!=noone&amp;&amp;ds_map_find_value(aiTurns, currentTurn)&gt;=0{
     viewW = 180
     viewH = 120
}else{
    viewW = 360
    viewH = 240
}

if keyboard_check(ord('R')){
    view_angle=0
    viewTurn=0
    view_wview=360
    view_hview=240
    view_xview=xx-view_wview/2
    view_yview=yy-view_hview/2
    }
if keyboard_check(ord('N')){
    view_wview*=1.1
    view_hview*=1.1
}
if keyboard_check(ord('M')){
    view_wview/=1.1
    view_hview/=1.1
}
var io=instance_place(xx-15*dsin(view_angle),yy+15*dcos(view_angle),oObj)
if camTurnDir=0
if 1=0
if io!=noone
if io.sprite_height&gt;=26
if io.draw&gt;0{
    if xx+dsin(view_angle)&lt;x+dsin(view_angle)
    ||yy+dcos(view_angle)&lt;y+dcos(view_angle)
        camTurnDir=-1
    else //if xx&lt;x
        camTurnDir=1
}
if keyboard_check(ord('T')){
//add time
minu+=1;
if minu&gt;=6{
    minu=0;
    hour+=1
    if hour&gt;=24
        hour=0
}
}
if camTurnDir!=0
{
    view_angle+=5*camTurnDir
    if view_angle=0
    ||view_angle=90
    ||view_angle=180
    ||view_angle=270
    ||view_angle=360
    camTurnDir=0
}
}
//if !ds_map_find_value(aiTurns, currentTurn)&lt;0
//if menu=-1
{
    if x &lt;= view_xview + 15
        move_camera(oCamera.xx-15,oCamera.yy)
    else if x &gt;= view_xview + view_wview - 15
        move_camera(oCamera.xx+15,oCamera.yy)
    if y &lt;= view_yview //+ 15
        move_camera(oCamera.xx,oCamera.yy-15)
    else if y &gt;= view_yview + view_hview - 15
        move_camera(oCamera.xx,oCamera.yy+15)
}
/*if keyboard_check_released(oControler.keys[5])
||mouse_check_button_released(mb_right){
oCamera.xx = x
oCamera.yy = y
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///generate map
if floor(menu)=99{
    var rx= room_width/30
    var ry= room_height/30
    generate_map(rx*15,ry*15,unitList)
    var inst;
    for (i=0;i&lt;4;i++){
    if unitSelect[i]&gt;=0{
        unitStarted++
        inst=instance_create((rx+(i%2))*15,(ry+floor(i/2))*15,
            return_unit(unitSelect[i],3,i));
        ds_list_add(unitList,inst)
        }
    }
    playerGold[0] = 4-unitStarted
    //inst=instance_create((rx+(i%2))*15,(ry+floor(i/2))*15,
    //    return_unit(unitSelect[i],3,i));
    //ds_list_add(unitList,inst)
    xx=inst.xx
    yy=inst.yy
    move_camera(xx,yy)
    var temp=instance_create(inst.x,inst.y,oEff);
    temp.sprite_index=spawn_eff
    for (var k=0;k&lt;ds_list_size(unitList);k++){
        selected=ds_list_find_value(unitList,k)
        update_fog()
    }selected=noone
    menu=-1
    audio_play_sound(TempBGM3,100,true)


}
if menu=-1
if (mouse_check_button(mb_left)||keyboard_check(keys[4])
)&amp;&amp;!place_meeting(x,y,oChar)&amp;&amp;selected=noone{
    psudoRight+=1
}
else
    psudoRight=0
if abs(mouse_x-mouse_xprevious)&gt;1||abs(mouse_y-mouse_yprevious)&gt;1{
    psudoRight=0
}
mouse_xprevious = mouse_x
mouse_yprevious = mouse_y
if psudoRight=30{
    if phase = 0{
        psudoRight=0
        for (var i=0;i&lt;ds_list_size(unitList);i++){
        var char=ds_list_find_value(unitList,i)
            if instance_exists(char){
            instance_activate_object(char)
            if char.hp&gt;0
                char.wait=1
            }
        }
        instance_activate_all()
        update_fog()
        selected=noone
        check_turn_end()
        add_all_to_map()
    }
    //end turn
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///map activation when turn ends
/*if alarm_get(0)=1{
    instance_activate_all()
    alarm[9]=2
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///audio
//if audio_sound_get_track_position(TempBGM1)&gt;40
//    audio_sound_set_track_position(TempBGM1,0)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(unitList)
ds_list_destroy(allUnits)
mp_grid_destroy(grid)
ds_grid_destroy(gridF1)
ds_grid_destroy(gridF2)
ds_map_destroy(aiTurns)
ds_grid_destroy(allyMatrix)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw mouse
if !global.mobile
||!global.production
draw_sprite(mouse,mouse_check_button(mb_left),device_mouse_x_to_gui(0),device_mouse_y_to_gui(0))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#2 draw info over unit
draw_set_alpha(1)
if selected!=noone
if ds_map_find_value(aiTurns, currentTurn)&gt;=0
if phase=3{
    var c=selected
    var range=return_wep_range(c.unit)
    var inst=instance_place(xx,yy,oUnit)
    if inst!=noone
    &amp;&amp; inst.object_index = oLockDoor
    &amp;&amp; abs(xx-c.x)/15+abs(yy-c.y)/15&lt;=1
    &amp;&amp; c.statusStr[findStatus(c,1)]&gt;0{
        ix=x
        iy=y
        itext="uNlock"
    }
    else if ds_grid_get(gridF1,round(xx)/15,round(yy)/15)&gt;0 {
        if abs(xx-c.x)/15+abs(yy-c.y)/15&lt;=0
        { 
            ix=x
            iy=y
            itext="wait"
        }
    else if abs(xx-c.x)/15+abs(yy-c.y)/15&lt;=range
        { 
            if (inst!=noone&amp;&amp; inst!=c)
            || (inst = noone &amp;&amp;return_attack_type(c.unit)=1)
            || (inst = noone &amp;&amp;return_attack_type(c.unit)=3){
                ix=x
                iy=y
                itext =return_atk_name(c.unit)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///3 draw turn ender
draw_set_alpha(1)
if phase=0{
    if psudoRight&gt;5{
    draw_sprite(healthBar,sprite_get_number(healthBar)*psudoRight/30,x,y)
    ix=x
    iy=y
    itext="eNd turN"
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///4 draw info on ground over tile
if ix!=-1&amp;&amp;iy!=-1
{
    draw_sprite_ext(infoSprite,0,ix+7,iy+7,1,1,-view_angle,-1,1)
    draw_set_font(pixelBlock)
    draw_set_colour(c_white)
    draw_text_transformed(ix+7+15*dcos(45-view_angle),iy+7-15*dsin(45-view_angle),itext
        ,1,1,-view_angle)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#1background
draw_background_stretched(greenBackground,0,0,room_width,room_height)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw selected unit
var temp=selected
var count=0
selected = noone
    
if menu=-1
if ds_map_find_value(aiTurns, currentTurn)&gt;=0||debugging=1
{
    var over=instance_place(xx,yy,oUnit);
    if ds_grid_get(gridF1,round(xx/15),round(yy/15))&gt;0||debugging=1
    if (over!=noone
    &amp;&amp;over.draw=1)
    ||debugging=1{
        selected=over;
        }
    if selected = noone{
        over=instance_place(xx,yy,oItem);
        if ds_grid_get(gridF1,round(xx/15),round(yy/15))&gt;0||debugging=1
        if (over!=noone
        &amp;&amp;over.visible)
        ||debugging=1{
            selected=over;
            }
    }
    if selected = noone{
        over=instance_place(xx,yy,oEvent);
        if ds_grid_get(gridF1,round(xx/15),round(yy/15))&gt;0||debugging=1
        if (over!=noone
        &amp;&amp;over.visible)
        ||debugging=1{
            selected=over;
            }
    }
    while (selected !=noone &amp;&amp; instance_exists(selected)){
        var c=selected
        draw_set_font(pixelFont)
    
        //image_blend=playerColour[c.team]
    
       draw_set_colour(c_dkgray)
       var String = c.name + " - "+unit_description(c.object_index)
       draw_rectangle(2,view_hport-14-count*11,
            string_width(String)+5,view_hport-3-count*11,false)
       draw_set_colour(c_white)
       draw_text_transformed(3,view_hport-11-count*11,string_upper(String),1,1,0)
       
       instance_deactivate_object(selected)
       
       selected=noone
        over=instance_place(xx,yy,oUnit);
        if ds_grid_get(gridF1,round(xx/15),round(yy/15))&gt;0||debugging=1
        if (over!=noone
        &amp;&amp;over.draw=1)
        ||debugging=1{
            selected=over;
            }
        if selected = noone{
            over=instance_place(xx,yy,oItem);
            if ds_grid_get(gridF1,round(xx/15),round(yy/15))&gt;0||debugging=1
            if (over!=noone
            &amp;&amp;over.visible)
            ||debugging=1{
                selected=over;
                }
        }
        if selected = noone{
            over=instance_place(xx,yy,oEvent);
            if ds_grid_get(gridF1,round(xx/15),round(yy/15))&gt;0||debugging=1
            if (over!=noone
            &amp;&amp;over.visible)
            ||debugging=1{
                selected=over;
                }
        }
       count++
   }
   instance_activate_all()
}
selected=temp
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#3 draw message
if logVisable&gt;0
if global.production=0
{
    var vx=5;
    draw_set_font(pixelFont)
    draw_set_alpha(logVisable/4)
    draw_set_colour(c_dkgray)
    draw_set_alpha(0.6)
    var height=0
    for (var i=0;i&lt;array_length_1d(log);i++){
        height+=string_height_ext(log[i],6,110)+1
    }
    draw_rectangle(vx,190-height,vx+120,190,false)
    draw_set_alpha(logVisable)
    draw_set_colour(c_ltgray)
    height=0
    for (var i=0;i&lt;array_length_1d(log);i++){
        height+=string_height_ext(log[i],6,110)+1
        draw_text_ext(vx+4,191-height,log[i],6,110)
        }
    logVisable-=0.02
    draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#5 draw menus
turnTime++
var unitLeft=0;
for (var i=0;i&lt;ds_list_size(unitList);i++){
    var char=ds_list_find_value(unitList,i)
        instance_activate_object(char)
        if instance_exists(char)
        {
        if char.wait=0
            unitLeft++;
        }
}
draw_set_colour(c_fuchsia)
draw_set_font(pixelFont)
draw_set_halign(fa_left)
draw_set_alpha(1)
draw_text(2,40,"FPS: "+string(fps))
draw_text(2,10,"Floor: "+string(level))
draw_text(2,20,"TURN: "+string(turnsSurvive))
draw_sprite(coin,0,5,32)
draw_text(13,30,string(playerGold[0]))
if global.production=2{
draw_set_colour(c_fuchsia)
draw_set_font(pixelFont)
draw_set_alpha(1)
//draw_text(200,10,"loop: "+string(score))
draw_text(2,10,"time: "+string(hour)+":"+string(minu)+"0")
draw_text(2,20,"turNs survived: "+string(turnsSurvive))
draw_text(2,30,string("RNG: "+string(randNum[randPos])))
draw_text(2,50,"uNit to move: "+string(unitLeft)+"/"+string(ds_list_size(unitList)))
var over=instance_place(xx,yy,oUnit)
if over!=noone
    draw_text(2,60,"over : "+string(over.name)+" "+string(over))
draw_text(2,70,"AI Time: "+string((timePhase0+timePhase1
+timePhase3+timePhase4+timePhase5+timePhase8+timePhase11)/30))
draw_text(2,80,"Phase SelectiNg: "+string(timePhase0/30))
draw_text(2,90,"Phase MoviNg: "+string(timePhase1/30))
draw_text(2,100,"Phase AttackiNg: "+string(timePhase3/30))
draw_text(2,110,"AttackiNg1: "+string(timePhase4/30))
draw_text(2,120,"AttackiNg2: "+string(timePhase5/30))
draw_text(2,130,"Phase skill: "+string(timePhase11/30))
draw_text(2,140,"using skill: "+string(timePhase8/30))
}

draw_set_font(pixelBlock)
//draw compass
if global.production=0{
    draw_sprite_ext(compassArrow,0,180,30,1,1,view_angle,-1,1)
    draw_set_colour(c_red)
    draw_text(178,28,"N")
    }


draw_set_colour(c_white)
if ds_map_find_value(aiTurns, currentTurn)&lt;0
{
    var waitCount;
    waitCount=0
    var count=0
    while ds_map_find_value(aiTurns, currentTurn+count)&lt;0
        &amp;&amp;waitCount&lt;ds_list_size(aiTurns)
        {
        count++
        waitCount++;
        if currentTurn+count&gt;playerMax{
            count=-currentTurn
        }
    }
    waitCount--
draw_text(10,10,"wait")
draw_rectangle(10,20,10+(unitLeft/ds_list_size(unitList))*40+40*waitCount,23,false)
}
draw_set_halign(fa_right)
draw_text(358,10,"wasd: move coNtroler")
draw_text(358,22,"f: select")
draw_text(358,34,"g: back")
draw_set_halign(fa_left)
draw_set_font(pixelFont)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start menu
if menu=0{
    if mouse_check_button_pressed(mb_left)
    || mouse_check_button_pressed(mb_right){
        controler=0
    }
    
    if keyboard_check_pressed(keys[0])
    ||keyboard_check_pressed(keys[1])
    ||keyboard_check_pressed(keys[2])
    ||keyboard_check_pressed(keys[3])
    ||keyboard_check_pressed(keys[4])
    ||keyboard_check_pressed(keys[5])
        controler=1
    
    draw_set_font(pixelBlock)
    draw_set_halign(fa_center)
    draw_set_color(c_ltgray)
    if controler=0
    if mouse_x-view_xview&gt;120
    if mouse_x-view_xview&lt;240
    if mouse_y-view_yview&gt;160
        menuSelect=floor((mouse_y-view_yview-160)/20)
    else menuSelect=-1
    if keyboard_check_pressed(keys[2]){
        menuSelect=min(3,menuSelect+1)
        }
    else if keyboard_check_pressed(keys[0]){
        menuSelect=max(0,menuSelect-1)
        }
    draw_text_transformed(180,160,"New game",2,2,0)
    draw_text_transformed(180,180,"stats",2,2,0)
    draw_text_transformed(180,200,"optioNs",2,2,0)
    draw_text_transformed(180,220,"quit",2,2,0)
    draw_set_colour(c_white)
    switch menuSelect{
        case 0: draw_text_transformed(180,160,"-New game-",2,2,0)
            if mouse_check_button_released(mb_left)
            ||keyboard_check_pressed(keys[4]){
            //instance_create((1+0)*(view_wview/5),
            //    view_hview-30,oCharCreation)
            menu=1
            }
            break;
        case 1: draw_text_transformed(180,180,"-stats-",2,2,0)break;
        case 2: draw_text_transformed(180,200,"-optioNs-",2,2,0)break;
        case 3: draw_text_transformed(180,220,"-quit-",2,2,0)
            if mouse_check_button_released(mb_left)
            ||keyboard_check_pressed(keys[4])
                game_end()
            break;
    }
    draw_set_halign(fa_left)
}
else if menu=1{
 draw_set_halign(fa_center)
     var j=playerSelect
     var m=0;
     var p=0
     var cc=maxChar
     if keyboard_check_pressed(keys[1])
        playerSelect--
    else if keyboard_check_pressed(keys[3])
        playerSelect++    
    if controler=0
        playerSelect = round((mouse_x-view_xview-50) /(view_wview/5))
    playerSelect = clamp(playerSelect,0,3)  
     if unitSelect[j]&gt;=0
         {
         if controler=0
         if mouse_x-view_xview&gt;(1+j)*(view_wview/5)-31
         if mouse_x-view_xview&lt;(1+j)*(view_wview/5)+30
         if mouse_y-view_yview&gt;view_hview-170
            menuSelect=floor((mouse_y-view_yview-090)/42)
         menuSelect=clamp(menuSelect,0,3)  
         if keyboard_check_pressed(keys[2]){
            menuSelect=menuSelect+1
            }
        else if keyboard_check_pressed(keys[0]){
            menuSelect=menuSelect-1
            }
        if menuSelect&gt;3
            menuSelect=0
        else if menuSelect&lt;0
            menuSelect=3
         switch menuSelect{
            case 0: 
                if mouse_check_button_released(mb_left)
                ||keyboard_check_pressed(keys[4])
                ||keyboard_check_pressed(keys[6]){
                    unitSelect[j]++
                    while find_char_in_menu_list(return_unit(unitSelect[j],1,0),j)
                        &amp;&amp;unitSelect[j]&lt;cc
                        unitSelect[j]++
                    if unitSelect[j]&gt;=cc
                        unitSelect[j]=0
                    while find_char_in_menu_list(return_unit(unitSelect[j],1,0),j)
                        &amp;&amp;unitSelect[j]&lt;cc
                        unitSelect[j]++
                }
               /* else if keyboard_check_pressed(keys[7]){
                    unitSelect[j]--
                }*/
                
                //set limit
                if unitSelect[j]&gt;=cc
                    unitSelect[j]=0
                else if unitSelect[j]&lt;0
                    unitSelect[j]=cc-1
                
                break;
            case 2:
                if mouse_check_button_released(mb_left)
                ||keyboard_check_pressed(keys[4])
                    unitSelect[j]=-1
                break;
            case 3:
                if mouse_check_button_released(mb_left)
                ||keyboard_check_pressed(keys[4]){
                    menu=99//generate map
                    with(oCharCreation)
                        instance_destroy()
                    if global.mobile{
                        if global.vertical = 1{
                            view_wview = 120
                            view_hview = 180
                        }else{
                            view_wview = 180
                            view_hview = 120
                        }
                        }
                    }
                break;
        } 
     }else{//no unit yet
        if mouse_check_button_released(mb_left)
        ||keyboard_check_pressed(keys[4]){
            unitSelect[j]=0
            while find_char_in_menu_list(return_unit(unitSelect[j],1,0),j)
                &amp;&amp;unitSelect[j]&lt;cc
                unitSelect[j]++
        }
     }
     
     //visuals
      for (var i = 0;i&lt;playerMax;i++)
      {  
        if unitSelect[i]&gt;=0
        {
         draw_set_colour(c_dkgray)
         draw_rectangle((1+i)*(view_wview/5)-31,10,(1+i)*(view_wview/5)+30,view_hview-10,false)
         draw_set_colour(c_ltgray)
         draw_rectangle((1+i)*(view_wview/5)-27,15,(1+i)*(view_wview/5)+26,65,false)
         draw_sprite_ext(return_unit(unitSelect[i],1,0),0,(1+i)*(view_wview/5),60,2,2,0,-1,1)
         draw_set_colour(c_orange)
         draw_text_transformed((1+i)*(view_wview/5)+6,view_hview-170,"CLASS ",2,2,0)
         draw_set_colour(c_ltgray)
         draw_text_ext((1+i)*(view_wview/5),view_hview-120,unit_description(return_unit(unitSelect[i],3,i)),7,40)
         if menuSelect!=0
         ||i!=j
         draw_text_transformed((1+i)*(view_wview/5),view_hview-158,return_unit(unitSelect[i],0,0),1,1,0)
         draw_text((1+i)*(view_wview/5),view_hview-151,string(unitSelect[i]+1)+"/"+string(cc))
         draw_text_transformed((1+i)*(view_wview/5),view_hview-45,"REMOVE",2,2,0)
         draw_text_transformed((1+i)*(view_wview/5),view_hview-25,"READY",2,2,0)
         draw_set_colour(c_white)
         return_unit(unitSelect[i],2,i)
         //draw stats
         draw_text((1+i)*(view_wview/5),view_hview-143,"HP:"+string(hp[i]));
         if i  == j
         switch menuSelect{
             case 0: draw_text((1+i)*(view_wview/5),view_hview-158,"-"+return_unit(unitSelect[i],0,0)+"-")break;
             //case 1: draw_text((1+i)*(view_wview/5),view_hview-90,"-"+returnSkill(unitSkill[i],0,0,unitSelect[i])+"-")break;
             case 2: draw_text_transformed((1+i)*(view_wview/5),view_hview-45,"-REMOVE-",2,2,0)break;
             case 3: draw_text_transformed((1+i)*(view_wview/5),view_hview-25,"-READY-",2,2,0)break;
         }
       }else{// no unit yet
         draw_set_colour(c_dkgray)
         draw_rectangle((1+i)*(view_wview/5)-31,view_hview-40,(1+i)*(view_wview/5)+30,view_hview-10,false)
         if j = i{
            draw_set_colour(c_white)
            draw_text_transformed((1+i)*(view_wview/5),view_hview-25,"+UNIT",2,2,0)
            }
         else{
            draw_set_colour(c_ltgray)
            draw_text_transformed((1+i)*(view_wview/5),view_hview-25," UNIT",2,2,0)
            }
       } 
     
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///unit shadow and reset some variables
draw_set_colour(c_black)
draw_set_alpha(0.5)
with (oUnit)
{
    if draw&gt;0
    if visible
    if object_index!=oGreatTree{
        if object_is_ancestor(id.object_index,oChar){
            draw_ellipse(ax+x+6.5-sprite_get_width(unit+1)/2,ay+y+7-sprite_get_width(unit+1)/2,
            ax+x+6.5+sprite_get_width(unit+1)/2,ay+y+7+sprite_get_width(unit+1)/2,false)
        }else
            draw_ellipse(ax+x+6.5-sprite_get_width(sprite_index)/2,ay+y+7-sprite_get_width(sprite_index)/2,
            ax+x+6.5+sprite_get_width(sprite_index)/2,ay+y+7+sprite_get_width(sprite_index)/2,false)
    }
    else{
        draw_ellipse(ax+x+15-sprite_get_width(sprite_index)/2,ay+y+15-sprite_get_width(sprite_index)/2,
        ax+x+15+sprite_get_width(sprite_index)/2,ay+y+15+sprite_get_width(sprite_index)/2,false)
    }
}
draw_set_alpha(1)

//reset info tile
ix=-1
iy=-1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#2 draw tile and grid
draw_set_alpha(gridAlpha)
draw_set_colour(c_black)
for (var i=floor(view_yview/15)*15-15*5;i&lt;floor(view_yview/15)*15+view_wview+15;i+=15)
    draw_line(0,i-1,room_width,i-1)
for (var i=floor(view_xview/15)*15-15;i&lt;floor(view_xview/15)*15+view_wview+15;i+=15)
    draw_line(i-1,0,i-1,room_height)
draw_set_alpha(1)
//draw selected
if selected!=noone
if phase=0
if ds_map_find_value(aiTurns, currentTurn)&gt;=0{
    /*draw_set_colour(c_yellow)
    draw_set_alpha(0.5)
    draw_rectangle(selected.x,selected.y,selected.x+13,selected.y+13,false)
    draw_set_alpha(1)*/
var c=selected
var path=path_add()
mp_grid_clear_cell(grid,c.x/15,c.y/15)

for (var i=0;i&lt;ds_list_size(unitList);i++){
    var char=ds_list_find_value(unitList,i)
        if instance_exists(char){
            mp_grid_clear_cell(grid,char.x/15,char.y/15)
        }
    }


//show where you can move
    for (var i=-c.mov*15;i&lt;=c.mov*15;i+=15){
        for (var j=-c.mov*15;j&lt;=c.mov*15;j+=15){
        if mp_grid_path(grid,path,c.x+7,c.y+7,c.x+i+7,c.y+j+7,false)
        if path_get_number(path)-1&lt;=c.mov
        if!place_meeting(c.x+i,c.y+j,oUnit){
            draw_set_colour(c_aqua)
            draw_set_alpha(0.5)
            draw_rectangle(i+c.x,j+c.y,i+c.x+13,j+c.y+13,false)
            draw_set_alpha(1)
            if xx=i+c.x
            if yy=j+c.y{
                    ix=xx
                    iy=yy
                    itext="move"
                }
            }
        }
    }

path_delete(path)

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw move dist over unit when not selecting any
if menu=-1
if ds_map_find_value(aiTurns, currentTurn)&gt;=0
if selected=noone{
    add_all_to_map()
    selected=instance_place(xx,yy,oUnit);
    if selected!=noone
    if selected.draw&gt;0{
        var c=selected
        var path=path_add()
        mp_grid_clear_cell(grid,c.x/15,c.y/15)
        
        for (var i=0;i&lt;ds_list_size(unitList);i++){
            var char=ds_list_find_value(unitList,i)
                if instance_exists(char){
                    mp_grid_clear_cell(grid,char.x/15,char.y/15)
                }
            }
        
        //show where you can move
        //draw_set_colour(c_teal)
        //draw_set_alpha(0.5)
        var range=c.mov
        for (var i=-range*15;i&lt;=range*15;i+=15){
            for (var j=-range*15;j&lt;=range*15;j+=15){
            if mp_grid_path(grid,path,c.x+7,c.y+7,c.x+i+7,c.y+j+7,false)
            if path_get_number(path)-1&lt;=c.mov
            if!place_meeting(c.x+i,c.y+j,oUnit){
                draw_sprite_ext(box7x7,0,i+c.x+3,j+c.y+3,1,1,0,c_aqua,0.5)
                //draw_rectangle(i+c.x,j+c.y,i+c.x+13,j+c.y+13,false)
                }
            }
        }
        //draw_set_alpha(1)
        path_delete(path)
        //special Cases
        if c.object_index=oCampfire
            draw_sprite_ext(AOE_range1s,0,c.x,c.y,1,1,0,c_lime,0.5)
    }
    selected=noone
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw where you can attack
if selected!=noone
if phase=3
if ds_map_find_value(aiTurns, currentTurn)&gt;=0{
var c=selected
var range=return_wep_range(c.unit)

var atk_type = return_attack_type(c.unit)
switch atk_type{
    case 1:
        if (c.x!=c.xx || c.y!=c.yy)
            range = 0
        break;
    case 2:
        if (c.x!=c.xx || c.y!=c.yy)
            range = 0
        break;
}
//show where you can attack
    for (var i=-range*15;i&lt;=range*15;i+=15){
        for (var j=-range*15;j&lt;=range*15;j+=15){
        if abs(i/15)+abs(j/15)&lt;=range
        if i!=0||j!=0{
            draw_set_colour(c_orange)
            var inst=instance_place(i+c.x,j+c.y,oUnit)
            if inst!=noone{
                if c.pow&gt;0
                draw_set_colour(c_red)
                else draw_set_colour(c_lime)
            }
            draw_set_alpha(0.7)
            draw_rectangle(i+c.x,j+c.y,i+c.x+13,j+c.y+13,false)
            draw_set_alpha(1)
            }
        }
    }

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw area of attack
var fadeTime=5
if selected!=noone
if phase = 4 || phase = 5
if selected.draw&gt;0
if selected.visible{
var c=selected
var atk_area=return_wep_aoe(c.unit)
switch atk_area{
    case 0:
        var inst = noone
        if target!=noone
        &amp;&amp; instance_exists(target)
            inst = instance_create(floor(target.x/15)*15,floor(target.y/15)*15-3,oFade);
        else inst = instance_create(floor(xx/15)*15,floor(yy/15)*15-3,oFade);
            inst.sprite_index=squareEff
            inst.depth = 1000
            inst.alpha=fadeTime
            if c.pow&gt;0
                inst.image_blend= c_red
            else 
                inst.image_blend= c_lime
        break
    case 1:
        var inst = instance_create(floor(selected.x/15)*15,floor(selected.y/15)*15-3,oFade2);
        inst.sprite_index=AOE_rangeBreath
        inst.image_angle = c.dir*90
            inst.depth = 1000
            inst.alpha=fadeTime
            if c.pow&gt;0
                inst.image_blend= c_red
            else 
                inst.image_blend= c_lime
        break;
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw shadow
/*
-1 cant see
0 visited
0&amp;lt; visable
*/
var px=x/15
var py=y/15
var p=0
var vx=view_xview[p]/15,vy=view_yview[p]/15;
var fx=floor(view_xview[p]/15),fy=floor(view_yview[p]/15);
var vh=view_hview[p]/15,vw=view_wview[p]/15-16//0
for (var i=0;i&lt;room_width/15;i++)
for (var j=0;j&lt;room_height/15;j++){
        if ds_grid_get(gridF1,clamp(i,0,room_width/15),clamp(j,0,room_height/15))&lt;1
        if debugging=0
        {
          draw_sprite_ext(hitbox,0,(i)*15,(j)*15,1,1,0,0,0.5-ds_grid_get(gridF1,i,j))
        }
        /*if ds_grid_get(gridF1,i,j)&amp;gt;0{
           ds_grid_multiply(gridF1,i,j,0.70)
           }
        else{
            //mp_grid_add_cell(grid,i,j)
        }*/

//ds_grid_multiply_region(gridF1,0,0,100,100,min(-1,0.95))
}
if ds_map_find_value(aiTurns, currentTurn)&gt;=0{
if ds_grid_get(gridF1,round(xx/15),round(yy/15))&lt;=0
    draw_sprite_ext(sprite_index,image_index,x,y,1,1,image_angle,-1,1)

draw_self()
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debugging, make objects
if global.production=0
{
if keyboard_check_pressed(ord('1'))
    global.colourSwitch[0] = !global.colourSwitch[0]
if keyboard_check_pressed(ord('2'))
    global.colourSwitch[1] = !global.colourSwitch[1]
if keyboard_check_pressed(ord('3'))
    global.colourSwitch[2] = !global.colourSwitch[2]
if keyboard_check_pressed(ord('4'))
    global.colourSwitch[3] = !global.colourSwitch[3]

if keyboard_check_pressed(ord('K'))
    randPos++
else if keyboard_check_pressed(ord('L'))
    randPos--
if randPos&gt;999
    randPos=0
if randPos&lt;0
    randPos=999
if keyboard_check(vk_up)
    debugObj++
if keyboard_check_pressed(vk_down)
    debugObj--
if debugObj &gt; object47-oUnit-1
    debugObj = 0
debugObj=clamp(debugObj,0,object47-oUnit-1)
var obj=noone
if debugObj&gt;0
    obj=oUnit-1+debugObj
if obj!=noone{
draw_sprite_ext(object_get_sprite(obj),0,x+7,y+7,1,1,-view_angle,-1,0.5)
if keyboard_check_pressed(vk_enter)
if !place_meeting(x,y,oUnit){
    var inst=instance_create(floor(x/15)*15,floor(y/15)*15,obj);
    inst.team=currentTurn
    var temp=instance_create(x+7,y+7,oEff);
    temp.sprite_index=spawn_eff
    }
}
if keyboard_check(ord('I'))//&amp;&amp;selected=noone
    eventScene=true
else
    eventScene=false
if selected=noone
if keyboard_check_pressed(vk_backspace)
{
    var inst=instance_place(x,y,oUnit)
    if inst=noone
        inst=instance_place(x,y,oItem)
    if inst=noone
        inst=instance_place(x,y,oEvent)
    if inst!=noone{
        with inst
            instance_destroy()
        alarm[10]=1
    }
}

//cnage grid apha
if keyboard_check(ord('O'))
if gridAlpha&gt;0
    gridAlpha-=0.1
if keyboard_check_pressed(ord('P'))
if gridAlpha&lt;1
    gridAlpha+=0.1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.production=0{
if debugging=1
    debugging=0
else
    debugging=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
