<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>blank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>hitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai=0
xx=x
yy=y
z=0

ax=0
ay=0
//bosses
phase=0
action=0

//unit type
summon=0

team=0

path=path_add()
dir=0
wait=0

alpha=0
draw=0

link=noone
aggro=noone;
lastHitBy=noone;

name=""

hp=1
mhp=1
pow=1
action=0

slowHP=0

idle=0
combat=0

mov=1
mmov=mov

view=0

unit=0

image_speed=0

status[0]=0

if !object_is_ancestor(object_index,oObj){
}
c=0
ud=1
wave=0
lr=1
stCt=0//for looping through the status
wm=irandom(3)+5
marker=0
size=1

shader = -1
//shaders stuff
/*upixelH = shader_get_uniform(shader1, "pixelH");
upixelW = shader_get_uniform(shader1, "pixelW");
texelW = texture_get_texel_width(sprite_get_texture(sprite_index,0));
texelH = texture_get_texel_height(sprite_get_texture(sprite_index,0));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if findStatus(id,1)&gt;=0{
    instance_create(x,y,oKey)
}
if findStatus(id,2)&gt;=0{
    instance_create(x,y,oCoin)
}
path_delete(path)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snap to grid
x = round(x/15)*15
y = round(y/15)*15 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset colour
image_blend=c_white
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset attack position
ax=0
ay=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprite direction
if xprevious!=x
||yprevious!=y
{
   image_speed=1
   if x&gt;xprevious
    dir=0
   else if x&lt;xprevious
    dir=2
   else if y&gt;yprevious
    dir=3
   else if y&lt;yprevious
    dir=1
}
if path_position=1||path_position=0
{
    if dir&gt;3
        dir-=4
    if idle=0{
   image_speed=0
   if !object_is_ancestor(object_index,oObj)
   image_index=0
   }
   else
    image_speed=0.2
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///visibility
if x&gt;=view_xview
&amp;&amp; x&lt;=view_xview+view_wview
&amp;&amp; y&gt;=view_yview+view_hview/2-view_wview/2
&amp;&amp; y&lt;=view_yview+view_hview/2+view_wview/2
{
if object_is_ancestor(object_index,oObj)
    ||object_is_ancestor(object_index,oEvent){
    var cx=x
    var cy=y
    var d=1
    with oControler
    if ds_grid_get(gridF1,cx/15,cy/15)&lt;0
        d=0
    draw=d
}
visible=true

//idle movement
if !object_is_ancestor(object_index,oObj)
{
//c=ch
c+=0.005*ud
if c&gt;=0.15
    ud=-1
else if c&lt;0
    ud=1
}
if object_is_ancestor(object_index,oNature)
{
wave+=lr*0.1
if wave&gt;=wm
    lr=-1
else if wave&lt;=0
    lr=1
}

}else{ //visible=false
//instance_deactivate_object(id)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader=-1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set depth
depth=-y*cos(degtorad(view_angle))+x*sin(degtorad(view_angle))
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if dead
if hp&lt;=0{
    var viewSprite=dir+round(view_angle/90)
    if viewSprite&lt;0
        viewSprite+=4
    viewSprite=viewSprite%4
    var inst=instance_create(x,y,oFade);
    inst.sprite_index=unit+viewSprite
    inst.image_angle=-view_angle
    if path_speed&gt;0
        with inst
            path_start(path1,5,0,0)
    instance_destroy()
}
if dmg!=hp
{
   if image_blend!=c_red{
      alpha=5
   if image_blend=c_white
   {
       if abs(dmg-hp)&gt;0.5
          dmg+=sign(hp-dmg)*0.2//0.5
       else dmg=hp
       }
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw markers
if visible
if draw&gt;0
if marker&gt;0
if oControler.phase&lt;2||oControler.currentTurn&lt;0{
    var txt=""
    var col=c_white
    switch marker{
        case 1:      
            col=c_red
            txt="boss"
        break
        case 2:      
            col=c_blue
            txt="trade"
        break
    }
    draw_set_halign(fa_center)
    draw_set_colour(col)
    draw_set_font(pixelBlock);
    draw_text_transformed(x+7-28*dsin(-view_angle),y+7-28*dcos(view_angle),txt,1,1,-view_angle)
    draw_sprite_ext(unit_marker,0,x+7+13*dsin(view_angle),y+7-13*dcos(view_angle),1,1,-view_angle,col,1)
    draw_set_halign(fa_left)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
if visible||debugging=1
{

if draw&gt;0
||debugging=1{
//if !object_is_ancestor(object_index,oObj)
{//draw curr turn
    //if oControler.phase=0
    if oControler.currentTurn=team
    if oControler.currentTurn&gt;=0
    if wait=0
    if oControler.selected=noone
    || oControler.selected=id
    //if oControler.phase=0
    {
        if oControler.selected=noone
            shader = shaderCanSelect
        else
            shader = shaderSelect
        draw_sprite_ext(box14x14,0,x,y,1,1,0,c_yellow,0.5)
    }
}

//draw health bars
var colour;
colour=oControler.playerColour[team]
if object_is_ancestor(object_index,oObj){
    colour=oControler.playerColour[0];
    }
else
    draw_sprite_ext(marker1,0,x-7*(size-1),y-7*(size-1),size,size,0,colour,1)
if floor(hp)&lt;floor(mhp){
    alpha=5
if wait!=0
    alpha=0.5
}
if alpha&gt;0
{
   if hp&lt;dmg{
    draw_sprite_ext(healthBar,58*(dmg/mhp),x-7*(size-1),y-7*(size-1),size,size,0,colour,alpha)
   //draw_sprite_ext(healthBar,58*(hp/mhp),x,y,1,1,0,colour,alpha)
   }
   else{
   //draw_sprite_ext(healthBar,58*(hp/mhp),x,y,1,1,0,c_green,alpha)
   draw_sprite_ext(healthBar,58*(dmg/mhp),x-7*(size-1),y-7*(size-1),size,size,0,colour,alpha)
   }
    //if hp&lt;dmg{
   //draw_sprite_ext(hpBar,0,x,y-11,(dmg/mhp)*13,1,0,c_red,alpha)
  // draw_sprite_ext(hpBar,0,x,y-11,(hp/mhp)*13,1,0,c_lime,alpha)}
   //else{
   //draw_sprite_ext(hpBar,0,x,y-11,(hp/mhp)*13,1,0,c_green,alpha)
   //draw_sprite_ext(hpBar,0,x,y-11,(dmg/mhp)*13,1,0,c_lime,alpha)}
   
   //if alarm_get(6)&lt;=0
      alpha-=0.1
}

//draw unit
//draw_set_colour(c_black)
//draw_set_alpha(0.5)
//draw_ellipse(ax+x+7-sprite_get_width(sprite_index)/2,ay+y+7-sprite_get_width(sprite_index)/2,
//ax+x+6.5+sprite_get_width(sprite_index)/2,ay+y+7+sprite_get_width(sprite_index)/2,false)
//draw_set_alpha(1)
if (object_is_ancestor(object_index,oObj)
||ai=-1)
&amp;&amp;!object_is_ancestor(object_index,oDeco4){
var viewSprite=dir
}
else{
var viewSprite=dir+round(view_angle/90)
if viewSprite&lt;0
    viewSprite+=4
viewSprite=viewSprite%4
}

var shaderAlpha=dsin(((global.shaderAlpha%60 + 1)/60)*360)+1

var dir2=abs(dir+round(view_angle/90))
if dir2&gt;=4
    dir2-=4
if dir2=1||dir2=2{
    draw_weapon()
    if shader!=-1
    {
        shader_set(shader)
        draw_weapon2(shaderAlpha)
        shader_reset()
    }
}
    
draw_sprite_ext(sprite_index+viewSprite,image_index,x+7+ax,y+7+ay,1,1-c,-view_angle+wave,image_blend,1)
if shader!=-1
{

    shader_set(shader)
    draw_sprite_ext(sprite_index+viewSprite,image_index,x+7+ax,y+7+ay,1.0,1.0-c,-view_angle+wave,image_blend,shaderAlpha)
    shader_reset()
}
//else

//draw inactive
{
    //if !object_is_ancestor(object_index,oObj)
    {//draw curr turn
        //if oControler.phase=0
        if oControler.currentTurn=team
        if oControler.currentTurn&gt;=0
        if wait=1
        //if oControler.selected=noone
        {
            draw_sprite_ext(sprite_index+viewSprite,image_index,x+7+ax,y+7+ay,1,1-c,-view_angle+wave,1,0.5)
        }
    }
}

if dir2!=1
if dir2!=2{
    draw_weapon()
    if shader!=-1
    {
        shader_set(shader)
        draw_weapon2(shaderAlpha)
        shader_reset()
    }
}
if findStatus(id,3)!=-1
    draw_sprite_ext(shieldSprite,0,x+7+ax,y+7+ay,size,size,-view_angle,-1,0.5)
//loop through the status
var sub=-1
switch floor(status[floor(stCt)]){
    case 1:sub=4 break;
    case 2:sub=5 break;
}
if floor(status[floor(stCt)])==0
    stCt++
stCt+=0.02
if stCt&gt;=array_length_1d(status)
    stCt=0
if sub!=-1
    draw_sprite_ext(statuses,sub,x+7+ax,y+7+ay,1,1,-view_angle,-1,0.5
        +place_meeting(x,y,oControler))
}//end draw
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
